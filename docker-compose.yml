name: siscop
services:
  siscop-db:
    image: postgres:17-alpine
#    container_name: siscop-db
    restart: unless-stopped
    mem_limit: 2g      # Limita la RAM a 512 MB
    cpus: 2.0            # Limita el uso de CPU a medio núcleo
    expose:
       - "5432"
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: America/Havana
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - internal 

  api:
    build:
      context: ./api
#    container_name: siscop-api
    restart: always
    mem_limit: 1g      # Limita la RAM a 512 MB
    cpus: 1.0            # Limita el uso de CPU a medio núcleo
    user: "1001:1001"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      NODE_ENV: production
      TZ: America/Havana
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./uploads:/app/uploads
    depends_on:
      siscop-db:
        condition: service_healthy
    networks:
      - internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.apicp-router.rule=Host(`apicp.acubamos.cu`)"  # Cambia el nombre del router
      - "traefik.http.routers.apicp-router.entrypoints=websecure"
      - "traefik.http.routers.apicp-router.tls.certresolver=letsencrypt"
      - "traefik.http.routers.apicp-router.middlewares=security-headers@file"
      - "traefik.http.services.apicp-service.loadbalancer.server.port=3001"  # Cambia el nombre del servicio
      - "traefik.docker.network=proxy"

  frontend:
    build:
      context: ./frontend
#    container_name: siscop-frontend
    restart: always
    environment:
      - TZ=America/Havana
      - PORT=3000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./uploads:/app/public/uploads
    mem_limit: 512m      # Limita la RAM a 512 MB
    cpus: 0.5            # Limita el uso de CPU a medio núcleo
    networks:
      - internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.control.rule=Host(`siscop.acubamos.cu`)"
      - "traefik.http.routers.control.entrypoints=websecure"
      - "traefik.http.routers.control.tls.certresolver=letsencrypt"
      - "traefik.http.routers.control.middlewares=security-headers@file"
      - "traefik.http.services.control.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"

networks:
  internal:
  proxy:
    external: true